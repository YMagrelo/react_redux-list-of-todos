{"version":3,"sources":["store.ts","constants.tsx","api.ts","components/Todo.tsx","components/TodosList.tsx","components/Todos.tsx","index.tsx","App.tsx"],"names":["initialState","todos","store","createStore","state","action","type","value","filter","item","id","BASE_URL","getData","url","a","fetch","response","json","getPreparedTodos","Promise","all","todosFromServer","users","todosWithUsers","map","todo","user","find","person","userId","Todo","connect","dispatch","deleteTodo","title","completed","name","onClick","TodosList","className","key","Todos","setTodos","useState","isLoading","setLoading","loadTodos","loadedTodos","field","filteredTodos","sort","b","localeCompare","toString","length","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.237d104a.chunk.js","sourcesContent":["import { createStore, AnyAction } from 'redux';\nimport { State } from './interfaces';\nimport { ADD_TODO, DELETE_TODO } from './constants';\n\nconst initialState = {\n  todos: [],\n};\n\nconst reducer = (state: State = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        todos: action.value,\n      };\n\n    case DELETE_TODO:\n      return {\n        todos: state.todos.filter(item => item.id !== action.value),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer, initialState);\n","export const ADD_TODO = 'ADD_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\n","import { Todo, User } from './interfaces';\n\nconst BASE_URL = 'https://jsonplaceholder.typicode.com';\nconst USERS_URL = '/users';\nconst TODOS_URL = '/todos';\n\nasync function getData<T>(url: string): Promise<T> {\n  const response = await fetch(`${BASE_URL}${url}`);\n\n  return response.json();\n}\n\nexport const getUsers = (): Promise<User[]> => {\n  return getData<User[]>(USERS_URL);\n};\n\nexport const getTodos = (): Promise<Todo[]> => {\n  return getData<Todo[]>(TODOS_URL);\n};\n\nexport const getPreparedTodos = async () => {\n  const [todosFromServer, users] = await Promise.all([getTodos(), getUsers()]);\n\n  const todosWithUsers = todosFromServer.map((todo: Todo) => {\n    const user = users.find((person: User) => person.id === todo.userId) as User;\n\n    return {\n      ...todo,\n      user,\n    };\n  });\n\n  return todosWithUsers;\n};\n","import React, { FC } from 'react';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { DELETE_TODO } from '../constants';\nimport { PreparedTodo, State } from '../interfaces';\n\ninterface Props {\n  todo: PreparedTodo;\n  deleteTodo: (id: number) => void;\n}\n\nconst TodoTemplate: FC<Props> = ({ todo, deleteTodo }) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <>\n      <p>{title}</p>\n      <p>{todo.user.name}</p>\n      <p>{completed ? 'Completed' : 'Not complete'}</p>\n      <button type=\"button\" onClick={() => deleteTodo(id)}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nconst mapStateProps = (state: State) => ({\n  todos: state.todos,\n});\n\nconst mapDispatchProps = (dispatch: Dispatch) => ({\n  deleteTodo: (id: number) => dispatch({\n    type: DELETE_TODO,\n    value: id,\n  }),\n});\n\nexport const Todo = connect(mapStateProps, mapDispatchProps)(TodoTemplate);\n","import React, { FC } from 'react';\nimport { PreparedTodo } from '../interfaces';\nimport { Todo } from './Todo';\n\n\ninterface Props {\n  todos: PreparedTodo[];\n}\n\nexport const TodosList: FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"todos\">\n      {todos.map(todo => (\n        <li key={todo.id} className=\"todo\">\n          <Todo todo={todo} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { getPreparedTodos } from '../api';\nimport { ADD_TODO } from '../constants';\nimport { State, PreparedTodo } from '../interfaces';\nimport { TodosList } from './TodosList';\n\ninterface Actions {\n  setTodos: (todos: PreparedTodo[]) => void;\n}\n\ntype Props = State & Actions;\n\nconst TodosTemplate: FC<Props> = ({ todos, setTodos }) => {\n  const [isLoading, setLoading] = useState(false);\n\n  const loadTodos = async () => {\n    setLoading(true);\n    const loadedTodos = await getPreparedTodos();\n\n    setTodos(loadedTodos);\n  };\n\n  const filter = (field: string) => {\n    const filteredTodos = [...todos];\n\n    switch (field) {\n      case 'sortByTitle':\n        setTodos(filteredTodos\n          .sort((a, b) => a.title.localeCompare(b.title)));\n        break;\n      case 'sortByName':\n        setTodos(filteredTodos\n          .sort((a, b) => a.user.name.localeCompare(b.user.name)));\n        break;\n      case 'sortByCompleted':\n        setTodos(filteredTodos\n          .sort((a, b) => b.completed.toString().localeCompare(a.completed.toString())));\n        break;\n      default:\n    }\n  };\n\n  if (!todos.length) {\n    return (\n      <button\n        type=\"button\"\n        onClick={loadTodos}\n        disabled={isLoading}\n      >\n        {isLoading ? 'Loading...' : 'Start Load'}\n      </button>\n    );\n  }\n\n  return (\n    <>\n      <h1>Dinamic list of todos</h1>\n      <button type=\"button\" onClick={() => filter('sortByTitle')}>\n        Sort by title\n      </button>\n      <button type=\"button\" onClick={() => filter('sortByName')}>\n        Sort by name\n      </button>\n      <button type=\"button\" onClick={() => filter('sortByCompleted')}>\n        Sort by completed\n      </button>\n      <TodosList todos={todos} />\n    </>\n  );\n};\n\nconst mapStateProps = (state: State) => ({\n  todos: state.todos,\n});\n\nconst mapDispatchProps = (dispatch: Dispatch) => ({\n  setTodos: (todos: PreparedTodo[]) => dispatch({\n    type: ADD_TODO,\n    value: todos,\n  }),\n});\n\nexport const Todos = connect(mapStateProps, mapDispatchProps)(TodosTemplate);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { App } from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","import React, { FC } from 'react';\nimport './App.css';\nimport { Todos } from './components/Todos';\n\nexport const App: FC = () => (\n  <Todos />\n);\n"],"sourceRoot":""}